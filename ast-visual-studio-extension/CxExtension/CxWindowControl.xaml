<UserControl x:Class="ast_visual_studio_extension.CxExtension.CxWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ast_visual_studio_extension"
             xmlns:GenericWPF="clr-namespace:ast_visual_studio_extension.CxExtension.Utils"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:theming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0" xmlns:cxextension="clr-namespace:ast_visual_studio_extension.CxExtension" d:DataContext="{d:DesignInstance Type=cxextension:CxWindowControl}"
             local:VsTheme.UseVsTheme="True"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="1308"
             Name="CxWindow">

    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=hiddenLbl}"/>
        </Style>
        <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type ToggleButton}" x:Key="SeverityFilterStyle">
            <Setter Property="Margin" Value="2,5,2,5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--Setter Property="Background" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" Value="#FF26A0DA"/-->
                    <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" TargetType="{x:Type Separator}" x:Key="SeparatorStyle">
            <Setter Property="Margin" Value="6"/>
        </Style>

        <!-- Generated from the default template for MenuItem using blend
            We can use it to bind components to the theme colors as the MenuItem uses static colors by default (SolidColorBrush list below)
            Keeping the original values commented next to changes.
            How to generate:
                - Open Blend for Visual Studio
                - Go to designer for CxWindowControl
                - Add a MenuItem
                - Right click it, Edit template as a copy and set a name
        -->
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <!-- Menu.Static.Foreground Replaced with: {DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}} -->
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#3D26A0DA"/>
        <!-- Menu.Static.Foreground Replaced with: {DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}} -->
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
        <!-- Menu.Static.Foreground Replaced with: {DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}} -->
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="templateRoot" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.Row="1">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <!--Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/-->
                                <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"/>
                            </RepeatButton>
                            <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <!--Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/-->
                                <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"/>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <!--Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/-->
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>

                    <ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/-->
                    <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" Margin="3" VerticalAlignment="Center" Visibility="Collapsed"/>
                    <ContentPresenter ContentSource="Header" Grid.Column="1" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" PlacementTarget="{Binding ElementName=templateRoot}">
                        <!--Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Padding="2"-->
                        <Border x:Name="SubMenuBorder" Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <!--Rectangle Fill="{StaticResource Menu.Static.Separator}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/-->
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/-->
                    <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <!--Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Selected.Background}" BorderBrush="{StaticResource MenuItem.Selected.Border}" BorderThickness="1" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22"-->
                    <Border x:Name="GlyphPanel" Background="Transparent" BorderBrush="Transparent" BorderThickness="1" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <!--Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="10"/-->
                        <Path x:Name="Glyph" Data="{StaticResource Checkmark}" FlowDirection="LeftToRight" Fill="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/-->
                    <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <!--Border x:Name="GlyphPanel" Background="{StaticResource MenuItem.Highlight.Background}" BorderBrush="{StaticResource MenuItem.Highlight.Border}" BorderThickness="1" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22"-->
                    <Border x:Name="GlyphPanel" Background="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}" BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}" BorderThickness="1" Height="22" Margin="-1,0,0,0" VerticalAlignment="Center" Visibility="Hidden" Width="22">
                        <!--Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{StaticResource Menu.Static.Foreground}" Height="11" Width="9"/-->
                        <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" FlowDirection="LeftToRight" Fill="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" Height="11" Width="9"/>
                    </Border>
                    <ContentPresenter ContentSource="Header" Grid.Column="2" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    <!--Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/-->
                    <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" Background="{StaticResource Menu.Static.Background}" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <!--Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/-->
                    <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="DefaultMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <!--Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/-->
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                    <!--Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/-->
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowTextKey}}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="6,0"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- END GENERATED TEMPLATE -->

    </UserControl.Resources>

    <Grid Name="ParentGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.Resources>
            <GenericWPF:XAMLCalculations x:Key="CalculateScrollViewerHeight"/>
        </Grid.Resources>

        <Border Grid.Row="0" Grid.Column ="0" BorderBrush="#000000" BorderThickness="0 1 0 0" />
        <Border Grid.Row="0" Grid.Column ="1" BorderBrush="#000000" BorderThickness="0 1 0 0" />
        <Border Grid.Row="0" Grid.Column ="0" BorderBrush="#000000" BorderThickness="1 0 0 0" />
        <Border Grid.Row="0" Grid.Column ="2" BorderBrush="#000000" BorderThickness="0 1 0 0" />
        <Border Grid.Row="0" Grid.Column ="3" BorderBrush="#000000" BorderThickness="0 0 1 0" />
        <Border Grid.Row="1" Grid.Column ="0" BorderBrush="#000000" BorderThickness="0 1 0 0" />
        <Border Grid.Row="1" Grid.Column ="1" BorderBrush="#000000" BorderThickness="0 1 0 0" />
        <Border Grid.Row="1" Grid.Column ="2" BorderBrush="#000000" BorderThickness="0 1 0 0" />
        <Border Grid.Row="1" Grid.Column ="0" BorderBrush="#000000" BorderThickness="1 0 0 0" />
        <Border Grid.Row="1" Grid.Column ="0" BorderBrush="#000000" BorderThickness="0 0 0 1" />
        <Border Grid.Row="1" Grid.Column ="1" BorderBrush="#000000" BorderThickness="0 0 0 1" />
        <Border Grid.Row="1" Grid.Column ="2" BorderBrush="#000000" BorderThickness="0 0 0 1" />
        <Border Grid.Row="1" Grid.Column ="2" BorderBrush="#000000" BorderThickness="0 0 1 0" />

        <GridSplitter Grid.Row="1" Grid.Column ="0" Background="Black" Width="1" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
        <GridSplitter Grid.Row="1" Grid.Column ="1" Background="Black" Width="1" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>

        <Grid Grid.ColumnSpan="3" Grid.Row="0" theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, ElementName=CxWindow, Converter={StaticResource BrushToColorConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ScrollViewer  Grid.Row="0" Grid.Column="0" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                <StackPanel VerticalAlignment="Stretch" Orientation="Horizontal">

                    <TextBlock VerticalAlignment="Center" Text="Project:" Grid.Column="1" Margin="4"/>
                    <ComboBox VerticalAlignment="Center" IsTextSearchEnabled="False" IsEnabled="True" IsEditable="True" IsReadOnly="False" Text="Loading projects..." Name="ProjectsCombobox" Margin="4" MinWidth="100" SelectionChanged="OnChangeProject" KeyUp="OnProjectTextChanged"/>

                    <TextBlock Text="Branch:" Grid.Column="1" VerticalAlignment="Center" Margin="4"/>
                    <ComboBox VerticalAlignment="Center" IsTextSearchEnabled="False" IsEnabled="True" IsEditable="True" IsReadOnly="False" Text="Select a branch" Name="BranchesCombobox" Margin="4" MinWidth="100" SelectionChanged="OnChangeBranch" KeyUp="OnBranchTextChanged"/>

                    <TextBlock Text="Scan:" Grid.Column="1" VerticalAlignment="Center" Margin="4"/>
                    <ComboBox VerticalAlignment="Center" IsTextSearchEnabled="False" IsEnabled="True" IsEditable="True" IsReadOnly="False" Text="Select a scan" Name="ScansCombobox" Margin="4" MinWidth="100" SelectionChanged="OnChangeScan" KeyUp="OnScanTextChanged"/>
                </StackPanel>
            </ScrollViewer>
            <StackPanel Height="35" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right"  Orientation="Horizontal" >
                <StackPanel Orientation="Horizontal">
                    <Separator Style="{StaticResource SeparatorStyle}" />
                </StackPanel>


            <ToggleButton ToolTip="Critical" Style="{StaticResource SeverityFilterStyle}" x:Name="CriticalSeverityFilter" Click="SeverityFilter_Click">
                <Image x:Name="CriticalSeverityFilterImage" Stretch="None"></Image>
            </ToggleButton>
            <ToggleButton ToolTip="High" Style="{StaticResource SeverityFilterStyle}" x:Name="HighSeverityFilter" Click="SeverityFilter_Click">
                <Image x:Name="HighSeverityFilterImage" Stretch="None"></Image>
            </ToggleButton>
            <ToggleButton ToolTip="Medium" Style="{StaticResource SeverityFilterStyle}" x:Name="MediumSeverityFilter" Click="SeverityFilter_Click">
                <Image x:Name="MediumSeverityFilterImage" Stretch="None"></Image>
            </ToggleButton>
            <ToggleButton ToolTip="Low" Style="{StaticResource SeverityFilterStyle}" x:Name="LowSeverityFilter" Click="SeverityFilter_Click">
                <Image x:Name="LowSeverityFilterImage" Stretch="None"></Image>
            </ToggleButton>
                <ToggleButton ToolTip="Info" Style="{StaticResource SeverityFilterStyle}" x:Name="InfoSeverityFilter" Click="SeverityFilter_Click">
                    <Image x:Name="InfoSeverityFilterImage" Stretch="None"></Image>
                </ToggleButton>
                <Menu Background="Transparent">
                    <MenuItem x:Name="StateFilterMenuItem" ToolTip="Filter results" Style="{DynamicResource DefaultMenuItemStyle}" Padding="0" Margin="2,5,2,5">
                        <MenuItem.Icon>
                            <imaging:CrispImage Moniker="{x:Static catalog:KnownMonikers.Filter}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </Menu>
                <StackPanel Orientation="Horizontal">
                    <Separator Style="{StaticResource SeparatorStyle}" />
                </StackPanel>

                <Menu Background="Transparent">
                    <MenuItem ToolTip="Group by" Style="{DynamicResource DefaultMenuItemStyle}" Padding="0" Margin="2,5,2,5">
                        <MenuItem.Icon>
                            <imaging:CrispImage Moniker="{x:Static catalog:KnownMonikers.GroupBy}"/>
                        </MenuItem.Icon>
                        <MenuItem Style="{DynamicResource DefaultMenuItemStyle}" x:Name="FileGroupBy" Header="File" Click="GroupBy_Click"/>
                        <MenuItem Style="{DynamicResource DefaultMenuItemStyle}" x:Name="SeverityGroupBy" Header="Severity" Click="GroupBy_Click"/>
                        <MenuItem Style="{DynamicResource DefaultMenuItemStyle}" x:Name="StateGroupBy" Header="State" Click="GroupBy_Click"/>
                        <MenuItem Style="{DynamicResource DefaultMenuItemStyle}" x:Name="QueryNameGroupBy" Header="Query Name" Click="GroupBy_Click"/>
                        <MenuItem Style="{DynamicResource DefaultMenuItemStyle}" x:Name="StatusGroupBy" Header="Status" Click="GroupBy_Click"/>
                    </MenuItem>
                </Menu>

                <StackPanel Orientation="Horizontal">
                    <Separator Style="{StaticResource SeparatorStyle}" />
                </StackPanel>

                <ToggleButton ToolTip="Reset extension" Style="{StaticResource SeverityFilterStyle}" x:Name="RefreshBtn" Click="RefreshBtn_Click">
                    <imaging:CrispImage Moniker="{x:Static catalog:KnownMonikers.Refresh}"/>
                </ToggleButton>

                <ToggleButton ToolTip="Open Checkmarx settings" Style="{StaticResource SeverityFilterStyle}" x:Name="SettingsBtn" Click="SettingsBtn_Click">
                    <imaging:CrispImage Moniker="{x:Static catalog:KnownMonikers.Settings}"/>
                </ToggleButton>

                <StackPanel Orientation="Horizontal" x:Name="ScanningSeparator" Visibility="Visible">
                    <Separator Style="{StaticResource SeparatorStyle}" />
                </StackPanel>

                <ToggleButton ToolTip="Start a scan" Style="{StaticResource SeverityFilterStyle}" x:Name="ScanStartBtn" Click="ScanStartBtn_Click" Visibility="Visible">
                    <imaging:CrispImage Moniker="{x:Static catalog:KnownMonikers.Play}"/>
                </ToggleButton>
            </StackPanel>
        </Grid>
        
        <!-- Column 1 -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Margin="1,1,2,0" PreviewMouseWheel="PreviewMouseWheel">
            <TreeView Background="Transparent" Margin="10,5,0,13" x:Name="TreeViewResults" HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="0">
                <TreeView.Resources>
                    <!-- Style the inactive selection the same as active -->
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}"/>
                </TreeView.Resources>
            </TreeView>
        </ScrollViewer>

        <!-- Column 2 -->
        <StackPanel Grid.Row="1" x:Name="ResultInfoPanel" Grid.Column="1" Visibility="Hidden">

            <!-- Result Title -->
            <Label Name="hiddenLbl" Content="My Label" Visibility="Hidden" Width="0" Height="0"/>
            <Label Name="hiddenLblHoverColor" Visibility="Hidden" Width="0" Foreground="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}" Height="0"/>

            <!-- Result Title -->
            <Grid x:Name="TitleGrid" Margin="10" MinHeight="25">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <WrapPanel Name="ResultTitleWrapPanel" Orientation="Horizontal">
                    <Image x:Name="ResultSeverityIcon" Stretch="None" />
                    <TextBlock TextWrapping="WrapWithOverflow" Grid.Column="1" x:Name="ResultTitle" FontSize="15" Margin="7,2,0,0"/>
                </WrapPanel>

                <TextBlock Visibility="Hidden" x:Name="CodebashingTextBlock" Grid.Column="2" Margin="0,6,0,0">
		            <Run>Learn more at</Run>
		            <Run Cursor="Hand" Foreground="Orange" FontWeight="Bold" MouseUp="OnClickCodebashingLink"> >_</Run>
		            <Run Cursor="Hand" MouseUp="OnClickCodebashingLink">codebashing</Run>
                </TextBlock>
            </Grid>

            <Separator Margin="5,0,5,0"/>

            <UniformGrid Rows="1" Columns="3">
                <ComboBox IsEditable="True" IsReadOnly="True"  Name="TriageSeverityCombobox" Margin="5,5,0,0">
                    <ComboBoxItem>CRITICAL</ComboBoxItem>
                    <ComboBoxItem>HIGH</ComboBoxItem>
                    <ComboBoxItem>MEDIUM</ComboBoxItem>
                    <ComboBoxItem>LOW</ComboBoxItem>
                    <ComboBoxItem>INFO</ComboBoxItem>
                </ComboBox>
                <ComboBox VerticalAlignment="Center" IsEditable="True" IsReadOnly="True"  Name="TriageStateCombobox" Margin="5,5,0,0"/>
                <Button Name="TriageUpdateBtn" Click="OnClickTriageUpdate" Margin="5,5,5,0">Update</Button>
            </UniformGrid>

            <UniformGrid Rows="1" Columns="1">
                <TextBox Text="Comment (Optional)" Name="TriageComment" Margin="5,5,5,0" Height="50" TextWrapping="WrapWithOverflow" GotFocus="OnFocusComment" LostFocus="OnLostFocusComment"/>
            </UniformGrid>

            <!-- Description and Changes tabs -->
            <TabControl x:Name="ResultTabControl" TabStripPlacement="Top" HorizontalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" Margin="0,10,0,0">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <StackPanel Name="Panel" Cursor="Hand" Orientation="Vertical">
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                                        <TextBlock Name="BottomBar" Background="Transparent" Height="3" />
                                        <StackPanel.Style>
                                            <Style TargetType="{x:Type StackPanel}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="BottomBar" Property="Background" Value="LightBlue" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem Name="DescriptionTabItem">
                    <TabItem.HeaderTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" />
                            </DataTemplate.Resources>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Description" Grid.Column="1" VerticalAlignment="Center"/>
                            </Grid>
                        </DataTemplate>
                    </TabItem.HeaderTemplate>
                    <TabItem.Content>
                        <ScrollViewer>
                            <ScrollViewer.VerticalScrollBarVisibility>Auto</ScrollViewer.VerticalScrollBarVisibility>
                            <ScrollViewer.MaxHeight>
                                <MultiBinding Converter="{StaticResource CalculateScrollViewerHeight}">
                                    <Binding ElementName="ParentGrid" Path="ActualHeight"/>
                                    <Binding ElementName="TriageComment" Path="IsVisible"/>
                                </MultiBinding>
                            </ScrollViewer.MaxHeight>
                            <ScrollViewer.Content>
                                <StackPanel x:Name="ResultInfoStackPanel" CanVerticallyScroll="True">
                                </StackPanel>
                            </ScrollViewer.Content>
                        </ScrollViewer>
                    </TabItem.Content>
                </TabItem>
                <TabItem Name="ChangesTabItem">
                    <TabItem.HeaderTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" />
                            </DataTemplate.Resources>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Changes" Grid.Column="1" VerticalAlignment="Center" MouseUp="OnClickTriageChanges"/>
                            </Grid>
                        </DataTemplate>
                    </TabItem.HeaderTemplate>
                    <TabItem.Content>
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ScrollViewer.MaxHeight>
                                <MultiBinding Converter="{StaticResource CalculateScrollViewerHeight}">
                                    <Binding ElementName="ParentGrid" Path="ActualHeight"/>
                                    <Binding ElementName="TriageComment" Path="IsVisible"/>
                                </MultiBinding>
                            </ScrollViewer.MaxHeight>
                            <ScrollViewer.Content>
                                <StackPanel Name="TriageChangesTab" Margin="10,10,10,0"></StackPanel>
                            </ScrollViewer.Content>
                        </ScrollViewer>
                    </TabItem.Content>
                </TabItem>
            </TabControl>
        </StackPanel>


        <!-- Column 3 -->
        <ScrollViewer Grid.Row="1" Grid.Column="2" x:Name="VulnerabilitiesPanel" Visibility="Hidden" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Margin="1,1,2,0" PreviewMouseWheel="PreviewMouseWheel">
            <StackPanel>
                <!-- Result Title -->
                <WrapPanel Orientation="Horizontal" Margin="10" MinHeight="24">
                    <TextBlock x:Name="VulnerabilitiesPanelTitle" Text="" TextWrapping="WrapWithOverflow" Grid.Column="1" FontSize="15" Margin="7,0,0,0"></TextBlock>
                </WrapPanel>

                <Separator Margin="5,0,5,0"/>

                <ListView x:Name="VulnerabilitiesList" Grid.Column="2" Margin="10" Background="Transparent" BorderThickness="0">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </StackPanel>
        </ScrollViewer>

        <ScrollViewer Grid.Row="1" Grid.Column="2" x:Name="SastVulnerabilitiesPanel" Visibility="Hidden" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" Margin="1,1,2,0">
            <TabControl x:Name="LearnMoreAndRemediationTabControl" TabStripPlacement="Top" HorizontalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" Margin="0,10,0,0">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <StackPanel Name="Panel" Cursor="Hand" Orientation="Vertical">
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                                        <TextBlock Name="BottomBar" Background="Transparent" Height="3" />
                                        <StackPanel.Style>
                                            <Style TargetType="{x:Type StackPanel}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.AccentDarkKey}}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="BottomBar" Property="Background" Value="LightBlue" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem x:Name="VulnerabilitiesTabItem">
                     <TabItem.HeaderTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" />
                            </DataTemplate.Resources>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Attack Vector" Grid.Column="1" VerticalAlignment="Center"/>
                            </Grid>
                        </DataTemplate>
                    </TabItem.HeaderTemplate>
                    <TabItem.Content>
                        <ScrollViewer  PreviewMouseWheel="PreviewMouseWheel" HorizontalScrollBarVisibility="Auto">
                            <ScrollViewer.VerticalScrollBarVisibility>Auto</ScrollViewer.VerticalScrollBarVisibility>
                            <ScrollViewer.Content>
                                <StackPanel>
                                    <ListView x:Name="VulnerabilitiesListSast" Grid.Column="2" Background="Transparent" BorderThickness="0">
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="Focusable" Value="false"/>
                                                <Setter Property="Margin" Value="5"/>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                    </ListView>
                                </StackPanel>
                            </ScrollViewer.Content>
                        </ScrollViewer>
                    </TabItem.Content>
                </TabItem>
                <TabItem Name="LearnMore" MouseUp="OnClickLearnMoreRemediation">
                    <TabItem.HeaderTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" />
                            </DataTemplate.Resources>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Learn More" Grid.Column="1" VerticalAlignment="Center"/>
                            </Grid>
                        </DataTemplate>
                    </TabItem.HeaderTemplate>
                    <TabItem.Content>
                        <ScrollViewer  PreviewMouseWheel="PreviewMouseWheel">
                            <ScrollViewer.VerticalScrollBarVisibility>Auto</ScrollViewer.VerticalScrollBarVisibility>
                            <ScrollViewer.Content>
                                <StackPanel x:Name="LearnMorePanelTitle" CanVerticallyScroll="True">
                                </StackPanel>
                            </ScrollViewer.Content>
                        </ScrollViewer>
                    </TabItem.Content>
                </TabItem>
                <TabItem Name="Remediation" MouseUp="OnClickLearnMoreRemediation">
                    <TabItem.HeaderTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" />
                            </DataTemplate.Resources>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="5*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Remediation Examples" Grid.Column="1" VerticalAlignment="Center"/>
                            </Grid>
                        </DataTemplate>
                    </TabItem.HeaderTemplate>
                    <TabItem.Content>
                        <ScrollViewer PreviewMouseWheel="PreviewMouseWheel">
                            <ScrollViewer.VerticalScrollBarVisibility>Auto</ScrollViewer.VerticalScrollBarVisibility>
                            <ScrollViewer.Content>
                                <StackPanel x:Name="RemediationPanelTitle" CanVerticallyScroll="True">
                                </StackPanel>
                            </ScrollViewer.Content>
                        </ScrollViewer>
                    </TabItem.Content>
                </TabItem>
            </TabControl>
        </ScrollViewer>
    </Grid>


</UserControl>
