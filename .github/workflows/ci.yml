name: Checkmarx One visual studio extension CI

on: [pull_request, workflow_dispatch]

permissions:
  write-all

jobs:
  integration-tests:
    name: Checkmarx One visual studio extension CI / integration-tests
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4
      
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@3a16d909a1f3bbc65b52f8270d475d905e7d3e44
      
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@1ff57057b5cfdc39105cd07a01d78e9b0ea0c14c
        with:
          vs-version: '17.2'
      
      - name: Restore NuGet packages
        run: nuget restore .
      
      - name: Restore
        run: dotnet restore .
      
      - name: Build
        run: msbuild /p:Configuration=Release /p:DeployExtension=False
      
      - name: Tests
        env:
          CX_APIKEY: ${{ secrets.CX_APIKEY }}
        run: vstest.console.exe /InIsolation .\ast-visual-studio-extension-tests\bin\Release\net60-windows\ast-visual-studio-extension-tests.dll

  UI-tests:
    name: Checkmarx One visual studio extension CI / UI-tests
    needs: integration-tests
    timeout-minutes: 30
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Visual Studio
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64
      
      - name: Restore NuGet packages
        run: nuget restore
      
      - name: Build solution
        run: msbuild ast-visual-studio-extension.sln /p:Configuration=Release
      
      - name: Install Checkmarx Extension
        run: |
          $vsixPath = Get-ChildItem -Path ".\ast-visual-studio-extension\bin\Release\*.vsix" -Recurse | Select-Object -First 1
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\VSIXInstaller.exe" /quiet "$vsixPath"
          Start-Sleep -Seconds 30
      
      - name: Verify Extension Installation
        run: |
          $extensionPath = "C:\Users\runneradmin\AppData\Local\Microsoft\VisualStudio\17.0_*\Extensions"
          if (!(Test-Path -Path "$extensionPath\*\ast-visual-studio-extension*")) {
            throw "Extension not found in expected location"
          }
      
      - name: Run UI Tests
        run: |
          $testDll = ".\UITests\bin\Release\UITests.dll"
          if (!(Test-Path $testDll)) {
            Write-Error "Test DLL not found at: $testDll"
            exit 1
          }
          
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" `
            /InIsolation `
            /Logger:"trx;LogFileName=uitest-results.trx" `
            $testDll
        continue-on-error: true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/*.trx
            ${{ github.workspace }}\Screenshots

  cx-scan:
    name: Checkmarx One Scan / cx-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Checkmarx AST CLI Action
        uses: checkmarx/ast-github-action@main
        with:
          base_uri: ${{ secrets.CHECKMARX_BASE_URI }}
          cx_tenant: ${{ secrets.CHECKMARX_TENANT }}
          cx_client_id: ${{ secrets.CHECKMARX_CLIENT_ID }}
          cx_client_secret: ${{ secrets.CHECKMARX_CLIENT_SECRET }}
          additional_params: --threshold "sast-high=1"