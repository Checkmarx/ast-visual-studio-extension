name: Checkmarx One visual studio extension CI
on: [ pull_request, workflow_dispatch ]
permissions: write-all

jobs:
  integration-tests:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Setup VSTest
        uses: darenm/Setup-VSTest@3a16d909a1f3bbc65b52f8270d475d905e7d3e44 #v1

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@1ff57057b5cfdc39105cd07a01d78e9b0ea0c14c #v1.3.1
        with:
          vs-version: '17.2'

      - name: Restore NuGet packages
        run: nuget restore .

      - name: Restore
        run: dotnet restore .

      - name: Build
        run: msbuild /p:Configuration=Release /p:DeployExtension=False

      - name: Tests with Code Coverage
        env:
          CX_APIKEY: ${{ secrets.CX_APIKEY }}
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

      - name: Generate Coverage Report
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          reportgenerator -reports:"**/coverage.cobertura.xml" -targetdir:"coverage_report" -reporttypes:TextSummary

      - name: Print Coverage
        run: |
          $coverageReport = Get-Content coverage_report/Summary.txt
          echo "Coverage Summary:"
          echo $coverageReport
          $lineRate = Select-String -Path "**/coverage.cobertura.xml" -Pattern 'line-rate="([0-9.]+)"' | ForEach-Object { $_.Matches.Groups[1].Value }
          $percentage = [math]::Round(($lineRate * 100), 2)
          echo "Total Coverage: $percentage%"
          echo "COVERAGE_PERCENTAGE=$percentage" >> $env:GITHUB_ENV