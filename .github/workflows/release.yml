name: Release

on:
  push:
    tags:
      - "*"
jobs:
  release:
    runs-on: windows-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Increment VSIX version
        id: vsix_version
        uses: timheuer/vsix-version-stamp@v1
        with:
          manifest-file: ast-visual-studio-extension\source.extension.vsixmanifest
          
      - run: dotnet restore
      
      - run: msbuild /p:Configuration=Release /p:DeployExtension=False

      - name: Create PFX certificate
        id: create-pfx
        shell: pwsh
        env:
          PFX_CONTENT: ${{ secrets.CODE_SIGNING_CERTIFICATE }}
        run: |
           New-Item -ItemType directory -Path Certificate -Force
           Set-Content -Path Certificate/tempCert.txt -Value $env:PFX_CONTENT;
           CertUtil -f -decode Certificate/tempCert.txt Certificate/certificate.pfx
           Remove-Item -Path Certificate/tempCert.txt
           Write-Output "::set-output name=PFX_CERTIFICATE_PATH::Certificate/certificate.pfx";

      - name: Sign the VSIX
        env:
         PFX_CERTIFICATE_PATH: ${{ steps.create-pfx.outputs.PFX_CERTIFICATE_PATH }}
        run: tools/vsixsigntool.exe sign /f '${{ env.PFX_CERTIFICATE_PATH }}' /p ${{ secrets.CERTIFICATE_PASSWORD }} /sha1 1631134dde84109340374b0975cfa766dcc5a0e4 .\ast-visual-studio-extension\bin\Release\ast-visual-studio-extension.vsix

      - name: Delete PFX certificate
        shell: pwsh
        env:
         PFX_CERTIFICATE_PATH: ${{ steps.create-pfx.outputs.PFX_CERTIFICATE_PATH }}
        run: |
          Remove-Item -Path $env:PFX_CERTIFICATE_PATH;

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          generate_release_notes: true
          files: '.\ast-visual-studio-extension\bin\Release\ast-visual-studio-extension.vsix'

      - name: Publish Release
        uses: cezarypiatek/VsixPublisherAction@0.2
        with:
          extension-file: '.\ast-visual-studio-extension\bin\Release\ast-visual-studio-extension.vsix'
          publish-manifest-file: '.\vs-publish.json'
          personal-access-code: ${{ secrets.VS_PUBLISHER_ACCESS_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Get latest relase notes
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body_release="$(gh api -H "Accept: application/vnd.github.v3+json" /repos/Checkmarx/ast-visual-studio-extension/releases/latest | jq -r '.body' )"
          body_release="${body_release//$'\n'/'%0A'}"
          echo "::set-output name=body_release::$body_release"
      - name: Converts Markdown to HTML
        id: convert
        uses: lifepal/markdown-to-html@v1.2
        with:
          text: "${{ steps.release.outputs.body_release }}"

      - name: Clean html
        id: clean
        run: |
          clean="$(echo "${{ steps.convert.outputs.html }}" | awk '{gsub(/id=.[a-z]+/,"");print}' | tr -d '\n')"
          echo "$clean"
          echo "::set-output name=clean::$clean"
      - name: Send a Notification
        id: notify
        uses: thechetantalwar/teams-notify@v2
        with:
          teams_webhook_url: ${{ secrets.TEAMS_WEBHOOK_URI }}
          message: "<h1>Checkmarx Visual Studio Plugin ${{ env.RELEASE_VERSION }}</h1>${{ steps.clean.outputs.clean }}"
